{"ast":null,"code":"var _jsxFileName = \"/Users/milkatemelkova/Downloads/recipe-react-master/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe\";\nimport \"./App.css\";\nimport Loading from './Loading';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nfunction App() {\n  const API_ID = \"6f5d20b7\";\n  const API_KEY = \"c6a7010f0b54b7531de51f291a650dcb\";\n  const [allRecipe, setRecipe] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState('lemon');\n  const [loaded, setLoaded] = useState(true);\n  useEffect(() => {\n    getRecipe();\n  }, [query]);\n\n  const getRecipe = async () => {\n    const responce = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${API_ID}&app_key=${API_KEY}`);\n    const finalData = await responce.json();\n    setRecipe(finalData.hits);\n    setSearch('');\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n\n    if (!search) {\n      alert('Please enter a valid food!');\n    } else {\n      setQuery(search);\n      setLoaded(true);\n      setSearch('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, \"Search For Recipe\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: getSearch,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    value: search,\n    onChange: updateSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-center mt-5 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Recipe List\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-around flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, (() => {\n    switch (loaded) {\n      case true:\n        return allRecipe.map(r => /*#__PURE__*/React.createElement(Recipe, {\n          key: r.recipe.label,\n          title: r.recipe.label,\n          label: r.recipe.label,\n          calory: r.recipe.calories,\n          Diet: r.recipe.dietLabels,\n          healthLabels: r.recipe.healthLabels,\n          time: r.recipe.totalTime,\n          image: r.recipe.image,\n          ingredients: r.recipe.ingredients,\n          url: r.recipe.url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }\n        }));\n\n      case false:\n        return /*#__PURE__*/React.createElement(Loading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 35\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(Loading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 32\n          }\n        });\n    }\n  })()));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/milkatemelkova/Downloads/recipe-react-master/src/App.js"],"names":["React","useEffect","useState","Recipe","Loading","App","API_ID","API_KEY","allRecipe","setRecipe","search","setSearch","query","setQuery","loaded","setLoaded","getRecipe","responce","fetch","finalData","json","hits","updateSearch","e","target","value","getSearch","preventDefault","alert","map","r","recipe","label","calories","dietLabels","healthLabels","totalTime","image","ingredients","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,+CAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,MAAM,GAAG,UAAf;AACA,QAAMC,OAAO,GAAG,kCAAhB;AAEA,QAAM,CAACC,SAAD,EAAYC,SAAZ,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAK,CAACQ,MAAD,EAAQC,SAAR,IAAmBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAkBX,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACJ,KAAD,CAFM,CAAT;;AAIA,QAAMI,SAAS,GAAG,YAAY;AAG5B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,mCAAkCN,KAAM,WAAUN,MAAO,YAAWC,OAAQ,EADnD,CAA5B;AAGA,UAAMY,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAxB;AACAX,IAAAA,SAAS,CAACU,SAAS,CAACE,IAAX,CAAT;AAEAV,IAAAA,SAAS,CAAC,EAAD,CAAT;AAGD,GAZD;;AAaA,QAAMW,YAAY,GAAGC,CAAC,IAAG;AACvBZ,IAAAA,SAAS,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAGA,QAAMC,SAAS,GAAGH,CAAC,IAAG;AACpBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAI,CAACjB,MAAL,EAAY;AACXkB,MAAAA,KAAK,CAAE,4BAAF,CAAL;AAEA,KAHD,MAGO;AACPf,MAAAA,QAAQ,CAACH,MAAD,CAAR;AACAK,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAJ,MAAAA,SAAS,CAAC,EAAD,CAAT;AAEC;AACF,GAXD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,eAEE;AAAM,IAAA,QAAQ,EAAEe,SAAhB;AAA2B,IAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,OAA7B;AAAqC,IAAA,KAAK,EAAEhB,MAA5C;AAAoD,IAAA,QAAQ,EAAEY,YAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAFF,eAOE;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,eAQE;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEC,CAAC,MAAM;AACF,YAAQR,MAAR;AACE,WAAK,IAAL;AAAW,eACTN,SAAS,CAACqB,GAAV,CAAeC,CAAD,iBACZ,oBAAC,MAAD;AACE,UAAA,GAAG,EAAEA,CAAC,CAACC,MAAF,CAASC,KADhB;AAEE,UAAA,KAAK,EAAEF,CAAC,CAACC,MAAF,CAASC,KAFlB;AAGE,UAAA,KAAK,EAAEF,CAAC,CAACC,MAAF,CAASC,KAHlB;AAIE,UAAA,MAAM,EAAEF,CAAC,CAACC,MAAF,CAASE,QAJnB;AAKE,UAAA,IAAI,EAAEH,CAAC,CAACC,MAAF,CAASG,UALjB;AAME,UAAA,YAAY,EAAEJ,CAAC,CAACC,MAAF,CAASI,YANzB;AAOE,UAAA,IAAI,EAAEL,CAAC,CAACC,MAAF,CAASK,SAPjB;AAQE,UAAA,KAAK,EAAEN,CAAC,CAACC,MAAF,CAASM,KARlB;AASE,UAAA,WAAW,EAAEP,CAAC,CAACC,MAAF,CAASO,WATxB;AAUE,UAAA,GAAG,EAAER,CAAC,CAACC,MAAF,CAASQ,GAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADS;;AAiBX,WAAK,KAAL;AAAY,4BAAQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;;AACZ;AAAS,4BAAQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAnBX;AAqBD,GAtBJ,GAFD,CARF,CADF;AAqCD;;AAED,eAAelC,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe\";\nimport \"./App.css\";\nimport Loading from './Loading';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nfunction App() {\n  const API_ID = \"6f5d20b7\";\n  const API_KEY = \"c6a7010f0b54b7531de51f291a650dcb\";\n\n  const [allRecipe, setRecipe] = useState([]);\n  const[search,setSearch]=useState(\"\");\n  const [query, setQuery]=useState('lemon');\n  const [loaded, setLoaded] = useState(true);\n\n  useEffect(() => {\n    getRecipe();\n  }, [query]);\n\n  const getRecipe = async () => {\n   \n\n    const responce = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${API_ID}&app_key=${API_KEY}`\n    );\n    const finalData = await responce.json();\n    setRecipe(finalData.hits);\n    \n    setSearch('');\n    \n    \n  }; \n  const updateSearch = e =>{\n    setSearch(e.target.value)\n  }; \n  const getSearch = e =>{\n    e.preventDefault();\n    if (!search){\n     alert ('Please enter a valid food!')\n      \n    } else {\n    setQuery(search);\n    setLoaded(true);\n    setSearch('');\n   \n    }\n  } \n\n  \n  return (\n    <div className=\"App\">\n    <h4 className=\"text-center mt-5\">Search For Recipe</h4>\n      <form onSubmit={getSearch} className=\"form\">\n        <input type=\"text\" className=\"input\" value={search} onChange={updateSearch}></input>\n        <button type=\"submit\" className=\"search\">Search</button>\n      \n      </form>\n      <h4 className=\"text-center mt-5 mb-3\">Recipe List</h4>\n      <div className=\"d-flex justify-content-around flex-wrap\">\n        \n      {(() => {\n            switch (loaded) {\n              case true: return (\n                allRecipe.map((r) => (\n                  <Recipe\n                    key={r.recipe.label}\n                    title={r.recipe.label}\n                    label={r.recipe.label}\n                    calory={r.recipe.calories}\n                    Diet={r.recipe.dietLabels}\n                    healthLabels={r.recipe.healthLabels}\n                    time={r.recipe.totalTime}\n                    image={r.recipe.image}\n                    ingredients={r.recipe.ingredients}\n                    url={r.recipe.url}\n                  />\n\n                ))\n              )\n              case false: return (<Loading />)\n              default: return (<Loading />)\n            }\n          })()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}